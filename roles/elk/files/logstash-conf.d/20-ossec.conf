input {
        udp {
                port => 9000
                type => ossec
                #For users, who experiencing problems with encoding. Uncomment line bellow and place apropriate charset.
                #codec => plain { charset => "Windows-1251" }
        }

        #Stdin input for debug purposes
        # stdin {
        #        type => ossec_full

        #        codec => multiline {
        #              pattern => "^\*\*"
        #              negate => true
        #              what => "previous"
                       #For users, who experiencing problems with encoding. Uncomment line bellow and place apropriate charset.
                       #codec => plain { charset => "Windows-1251" }
        #        }
        #}
        #Input for filebeat
	 beats {
                port => 9001
                type => ossec_full

        }
        

}


filter {
 if [type] == "ossec_full"
  {

        grok {
                                        #** Alert 1433185454.285: - pam,syslog,authentication_success,
        	patterns_dir => ["/opt/lightsiem/patterns/"]
        	match => { "message" => "%{OSSEC_MESSAGE_FULL}" }
            	}
            
   	date {       
      		match => ["[Alert][CreateTime]",  "UNIX"]
      		target => "[Alert][CreateTime]"
  		}
 	mutate {
                add_field => [ "[Alert][Analyzer][Name]", "ossec" ]
                add_field => [ "[Alert][Analyzer][Node][Name]", "%{host}" ]
               }
 }

#  if [type] == "ossec" {

#    grok {
#      match => { "message" => "%{IDMEF_MESSAGE}" }
#    }

#    if ![syslogbase] { mutate { add_field => { "syslogbase" => "" } } }
#    if ![program] { mutate { add_field => { "program" => "" } } }
#    if ![timestamp] { mutate { add_field => { "timestamp" => "" } } }

#    date {
#        #Apr 19 11:55:57
#        match => ["Alert.CreateTime", "MMM dd HH:mm:ss", "MMM  d HH:mm:ss"]
#        target => "Alert.CreateTime"
#    }

#    mutate {
#	add_field => [ "Alert.Analyzer.Node.Address", "%{host}" ]

#	remove_field => [ "type" ]
#	remove_field => [ "logsource" ]
#	add_field => [ "Alert.Source.Process.Pid", "%{pid}" ]
#	remove_field => [ "pid" ]
#	add_field => [ "Alert.Source.Process.Name", "%{program}" ]
#	remove_field => [ "program" ]
#	add_field => [ "Alert.Analyzer.rawmessage", "%{syslogbase} %{syslog_message}" ]
#	add_field => [ "Alert.DetectTime", "%{timestamp}" ]



#	remove_field => [ "syslog_message" ]
#	remove_field => [ "syslogbase" ]

#    }
#  }
  
   if [type] in ["ossec", "ossec_full"]
{

# Drop message "< Connection to 1.2.3.4 closed by remote host."

	if [Alert][Classification][Ident] == "555" {
	if ([Alert][Analyzer][OSSEC][Diff] =~ "^[\>\<] Connection to [0-9.-]+ closed by remote host.$") {
		drop { }
	}
}
        #Apr 19 11:55:57
			if [Alert][Analyzer][Level][Origin] == "1" {
                                  mutate { add_field => [ "[Alert][Analyzer][Level][Normalized]", "1" ] }
                          } else if [Alert][Analyzer][Level][Origin] == "2" {
                                  mutate { add_field => [ "[Alert][Analyzer][Level][Normalized]", "2" ] }
                          } else if [Alert][Analyzer][Level][Origin] == "3" {
                                  mutate { add_field => [ "[Alert][Analyzer][Level][Normalized]", "3" ] }
                          } else if [Alert][Analyzer][Level][Origin] == "4" {
                                  mutate { add_field => [ "[Alert][Analyzer][Level][Normalized]", "4" ] }
                          } else if [Alert][Analyzer][Level][Origin] == "5" {
                                 mutate { add_field => [ "[Alert][Analyzer][Level][Normalized]", "5" ] }
                          } else if [Alert][Analyzer][Level][Origin] == "6" {
                                    mutate { add_field => [ "[Alert][Analyzer][Level][Normalized]", "6" ] }
                          } else if [Alert][Analyzer][Level][Origin] == "7" {
                                    mutate { add_field => [ "[Alert][Analyzer][Level][Normalized]", "7" ] }
                          }

                        mutate {
                                convert => [ "[Alert][Analyzer][Level][Origin]", "integer" ]
                                convert => [ "[Alert][Analyzer][Level][Normalized]", "integer" ]
                                }


}
}
